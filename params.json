{"name":"YAML Config for Slim Framework","tagline":"Parses YAML files and adds them to Slim's config application instance method.","body":"# Slim Config - YAML\r\n\r\nParses YAML files and adds them into Slim's config singleton.\r\nUses Symfony's YAML Component to parse files (http://github.com/symfony/Yaml).\r\nAllows other YAML files to be imported and parameters to be set and used.\r\n\r\n## Getting Started\r\n\r\n### Installation\r\n\r\n#### Composer\r\n\r\nInstall composer in your project.\r\n```\r\ncurl -s https://getcomposer.org/installer | php\r\n```\r\nCreate a ```composer.json``` file in your project root:\r\n```\r\n{\r\n\t\"require\": {\r\n\t\t\"techsterx/slim-config-yaml\": \"1.*\"\r\n\t}\r\n}\r\n```\r\nInstall via composer:\r\n```\r\nphp composer.phar install\r\n```\r\nAdd this line to your application's ```index.php``` file:\r\n```php\r\n<?php\r\nrequire 'vendor/autoload.php';\r\n```\r\n\r\n#### Manual Install\r\n\r\nDownload and extract src/ directory into your project directory and ```require``` it in your\r\napplication's ```index.php``` file.\r\n```php\r\n<?php\r\nrequire 'Slim\\Slim.php';\r\nrequire 'Yaml.php';\r\n\r\n$app = new \\Slim\\Slim();\r\n\r\n\\BurningDiode\\Slim\\Config\\Yaml::getInstance()->addFile('/path/to/some/file');\r\n```\r\n\r\n### Methods\r\n\r\n*Slim Config - YAML* uses a static method to get the currenct instance.\r\nIf an instance doesn't exist, a new one will be created.\r\nUse the ```getInstance()``` method to get the current instance.\r\n\r\n```php\r\n$slimYaml = \\BurningDiode\\Slim\\Config\\Yaml::getInstance();\r\n```\r\n\r\n```_()``` is the shorthand equivalent of ```getInstance()```.\r\n\r\n```php\r\n$slimYaml = \\BurningDiode\\Slim\\Config\\Yaml::_();\r\n```\r\n\r\nTo add a single file, use the ```addFile()``` method.\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::getInstance()->addFile('/path/to/some/file.yaml');\r\n```\r\n\r\nYou can also chain multiple ```addFile()``` methods togethor.\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::getInstance()\r\n    ->addFile('/path/to/some/file.yaml')\r\n    ->addFile('/path/to/another/file.yaml');\r\n```\r\n\r\nYou can import a whole directory of YAML files.\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::getInstance()->addDirectory('/path/to/directory');\r\n```\r\n\r\nYou can chain with the ```addDirectory()``` method as well.\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::getInstance()\r\n    ->addDirectory('/path/to/directory')\r\n    ->addFile('/path/to/some/file.yaml');\r\n```\r\n\r\nSpecify some global parameters to be used by all Yaml files processed.\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::_()\r\n    ->addParameters(array('app.root' => dirname(__FILE__)))\r\n    ->addDirectory('/path/to/config/directory')\r\n    ->addFile('/path/to/file/outside/of/config/directory.yml');\r\n```\r\n\r\n### Using Parameters\r\n\r\nYou can specify parameters in YAML files that will be replaced using keywords. Parameters are only available to the resource currently being processed.\r\n\r\nconfig.yaml\r\n```yaml\r\nparameters:\r\n    key1: value1\r\n    key2: value2\r\n    \r\napplication:\r\n    keya: %key1%\r\n    keyb: %key2%\r\n```\r\n\r\napp.php\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::_()->addFile('config.yml');\r\n\r\n$config = $app->config('application');\r\n\r\nprint_r($config);\r\n```\r\n\r\nOutput:\r\n```\r\nArray\r\n(\r\n    [key1] => value1\r\n    [key2] => value2\r\n)\r\n```\r\n\r\n### Importing Files\r\n\r\nYou can import other YAML files which can be useful to keep all your common parameters in one file and used in others.\r\n\r\nparameters.yml\r\n```yaml\r\nparameters:\r\n    db_host:  localhost\r\n    db_user:  username\r\n    db_pass:  password\r\n    db_dbase: database\r\n```\r\n\r\ndatabase.yml\r\n```yaml\r\nimports:\r\n    - { resource: parameters.yml }\r\n    \r\ndatabase:\r\n    hostname: %db_host%\r\n    username: %db_user%\r\n    password: %db_pass%\r\n    database: %db_dbase%\r\n```\r\n\r\napp.php\r\n```php\r\n\\BurningDiode\\Slim\\Config\\Yaml::_()->addFile('database.yml');\r\n\r\n$db_config = $app->config('database');\r\n\r\nprint_r($db_config);\r\n```\r\n\r\nOutput:\r\n```\r\nArray\r\n(\r\n    [hostname] => localhost\r\n    [username] => username\r\n    [password] => password\r\n    [database] => database\r\n)\r\n```\r\n    \r\n## License\r\n\r\nSlim Config - YAML is released under the [MIT public license] (https://raw.githubusercontent.com/techsterx/slim-config-yaml/master/LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}